// Code generated by "stringer -type=TypeMask -trimprefix=TypeMask"; DO NOT EDIT.

package database

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TypeMaskObject-1]
	_ = x[TypeMaskItem-2]
	_ = x[TypeMaskContainer-4]
	_ = x[TypeMaskUnit-8]
	_ = x[TypeMaskPlayer-16]
	_ = x[TypeMaskGameObject-32]
	_ = x[TypeMaskDynamicObject-64]
	_ = x[TypeMaskCorpse-128]
}

const (
	_TypeMask_name_0 = "ObjectItem"
	_TypeMask_name_1 = "Container"
	_TypeMask_name_2 = "Unit"
	_TypeMask_name_3 = "Player"
	_TypeMask_name_4 = "GameObject"
	_TypeMask_name_5 = "DynamicObject"
	_TypeMask_name_6 = "Corpse"
)

var (
	_TypeMask_index_0 = [...]uint8{0, 6, 10}
)

func (i TypeMask) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _TypeMask_name_0[_TypeMask_index_0[i]:_TypeMask_index_0[i+1]]
	case i == 4:
		return _TypeMask_name_1
	case i == 8:
		return _TypeMask_name_2
	case i == 16:
		return _TypeMask_name_3
	case i == 32:
		return _TypeMask_name_4
	case i == 64:
		return _TypeMask_name_5
	case i == 128:
		return _TypeMask_name_6
	default:
		return "TypeMask(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
