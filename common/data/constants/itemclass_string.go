// Code generated by "stringer -type=ItemClass -trimprefix=ItemClass"; DO NOT EDIT.

package constants

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ItemClassConsumable-0]
	_ = x[ItemClassContainer-1]
	_ = x[ItemClassWeapon-2]
	_ = x[ItemClassArmor-4]
	_ = x[ItemClassReagent-5]
	_ = x[ItemClassProjectile-6]
	_ = x[ItemClassTradeGoods-7]
	_ = x[ItemClassRecipe-9]
	_ = x[ItemClassQuiver-11]
	_ = x[ItemClassQuest-12]
	_ = x[ItemClassKey-13]
	_ = x[ItemClassMisc-15]
}

const (
	_ItemClass_name_0 = "ConsumableContainerWeapon"
	_ItemClass_name_1 = "ArmorReagentProjectileTradeGoods"
	_ItemClass_name_2 = "Recipe"
	_ItemClass_name_3 = "QuiverQuestKey"
	_ItemClass_name_4 = "Misc"
)

var (
	_ItemClass_index_0 = [...]uint8{0, 10, 19, 25}
	_ItemClass_index_1 = [...]uint8{0, 5, 12, 22, 32}
	_ItemClass_index_3 = [...]uint8{0, 6, 11, 14}
)

func (i ItemClass) String() string {
	switch {
	case 0 <= i && i <= 2:
		return _ItemClass_name_0[_ItemClass_index_0[i]:_ItemClass_index_0[i+1]]
	case 4 <= i && i <= 7:
		i -= 4
		return _ItemClass_name_1[_ItemClass_index_1[i]:_ItemClass_index_1[i+1]]
	case i == 9:
		return _ItemClass_name_2
	case 11 <= i && i <= 13:
		i -= 11
		return _ItemClass_name_3[_ItemClass_index_3[i]:_ItemClass_index_3[i+1]]
	case i == 15:
		return _ItemClass_name_4
	default:
		return "ItemClass(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
