// Code generated by "stringer -type=CharErrorCode -trimprefix=CharErrorCode"; DO NOT EDIT.

package constants

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[CharErrorCodeCreateAccountLimit-53]
	_ = x[CharErrorCodeCreateDisabled-50]
	_ = x[CharErrorCodeCreateError-47]
	_ = x[CharErrorCodeCreateFailed-48]
	_ = x[CharErrorCodeCreateInProgress-45]
	_ = x[CharErrorCodeCreateNameInUse-49]
	_ = x[CharErrorCodeCreateOnlyExisting-55]
	_ = x[CharErrorCodeCreatePvpTeamsViolation-51]
	_ = x[CharErrorCodeCreateServerLimit-52]
	_ = x[CharErrorCodeCreateServerQueue-54]
	_ = x[CharErrorCodeCreateSuccess-46]
	_ = x[CharErrorCodeDeleteFailed-58]
	_ = x[CharErrorCodeDeleteFailedLockedForTransfer-59]
	_ = x[CharErrorCodeDeleteInProgress-56]
	_ = x[CharErrorCodeDeleteSuccess-57]
	_ = x[CharErrorCodeListFailed-44]
	_ = x[CharErrorCodeListRetrieved-43]
	_ = x[CharErrorCodeListRetrieving-42]
	_ = x[CharErrorCodeNameConsecutiveSpaces-80]
	_ = x[CharErrorCodeNameFailure-81]
	_ = x[CharErrorCodeNameInvalidApostrophe-76]
	_ = x[CharErrorCodeNameInvalidCharacter-72]
	_ = x[CharErrorCodeNameInvalidSpace-79]
	_ = x[CharErrorCodeNameMixedLanguages-73]
	_ = x[CharErrorCodeNameMultipleApostrophes-77]
	_ = x[CharErrorCodeNameNoName-69]
	_ = x[CharErrorCodeNameProfane-74]
	_ = x[CharErrorCodeNameReserved-75]
	_ = x[CharErrorCodeNameSuccess-82]
	_ = x[CharErrorCodeNameThreeConsecutive-78]
	_ = x[CharErrorCodeNameTooLong-71]
	_ = x[CharErrorCodeNameTooShort-70]
}

const (
	_CharErrorCode_name_0 = "ListRetrievingListRetrievedListFailedCreateInProgressCreateSuccessCreateErrorCreateFailedCreateNameInUseCreateDisabledCreatePvpTeamsViolationCreateServerLimitCreateAccountLimitCreateServerQueueCreateOnlyExistingDeleteInProgressDeleteSuccessDeleteFailedDeleteFailedLockedForTransfer"
	_CharErrorCode_name_1 = "NameNoNameNameTooShortNameTooLongNameInvalidCharacterNameMixedLanguagesNameProfaneNameReservedNameInvalidApostropheNameMultipleApostrophesNameThreeConsecutiveNameInvalidSpaceNameConsecutiveSpacesNameFailureNameSuccess"
)

var (
	_CharErrorCode_index_0 = [...]uint16{0, 14, 27, 37, 53, 66, 77, 89, 104, 118, 141, 158, 176, 193, 211, 227, 240, 252, 281}
	_CharErrorCode_index_1 = [...]uint8{0, 10, 22, 33, 53, 71, 82, 94, 115, 138, 158, 174, 195, 206, 217}
)

func (i CharErrorCode) String() string {
	switch {
	case 42 <= i && i <= 59:
		i -= 42
		return _CharErrorCode_name_0[_CharErrorCode_index_0[i]:_CharErrorCode_index_0[i+1]]
	case 69 <= i && i <= 82:
		i -= 69
		return _CharErrorCode_name_1[_CharErrorCode_index_1[i]:_CharErrorCode_index_1[i+1]]
	default:
		return "CharErrorCode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
