// Code generated by "stringer -type=Language -trimprefix=Language"; DO NOT EDIT.

package constants

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[LanguageUniversal-0]
	_ = x[LanguageOrcish-1]
	_ = x[LanguageDarnassian-2]
	_ = x[LanguageTaurahe-3]
	_ = x[LanguageDwarvish-6]
	_ = x[LanguageCommon-7]
	_ = x[LanguageDemonic-8]
	_ = x[LanguageTitan-9]
	_ = x[LanguageThalassian-10]
	_ = x[LanguageDraconic-11]
	_ = x[LanguageKalimag-12]
	_ = x[LanguageGnomish-13]
	_ = x[LanguageTroll-14]
	_ = x[LanguageGutterspeak-33]
}

const (
	_Language_name_0 = "UniversalOrcishDarnassianTaurahe"
	_Language_name_1 = "DwarvishCommonDemonicTitanThalassianDraconicKalimagGnomishTroll"
	_Language_name_2 = "Gutterspeak"
)

var (
	_Language_index_0 = [...]uint8{0, 9, 15, 25, 32}
	_Language_index_1 = [...]uint8{0, 8, 14, 21, 26, 36, 44, 51, 58, 63}
)

func (i Language) String() string {
	switch {
	case 0 <= i && i <= 3:
		return _Language_name_0[_Language_index_0[i]:_Language_index_0[i+1]]
	case 6 <= i && i <= 14:
		i -= 6
		return _Language_name_1[_Language_index_1[i]:_Language_index_1[i+1]]
	case i == 33:
		return _Language_name_2
	default:
		return "Language(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
